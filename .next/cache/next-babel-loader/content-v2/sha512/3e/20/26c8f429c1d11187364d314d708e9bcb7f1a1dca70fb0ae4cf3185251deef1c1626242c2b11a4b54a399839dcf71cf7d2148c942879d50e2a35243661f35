{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/italo/\\xC1rea de Trabalho/cursos/nlw#5/podcasternext/src/components/Player/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useRef, useState } from \"react\";\nimport Image from \"next/image\";\nimport Slider from \"rc-slider\";\nimport \"rc-slider/assets/index.css\";\nimport styles from \"./styles.module.scss\";\nimport { usePlayer } from \"../../contexts/PlayerContext\";\nimport { convertDurationToTimeString } from \"../../utils/ConvertDurationToTimeString\";\nexport function Player() {\n  _s();\n\n  var _usePlayer = usePlayer(),\n      episodeList = _usePlayer.episodeList,\n      currentEpisodeIndex = _usePlayer.currentEpisodeIndex,\n      isPlaying = _usePlayer.isPlaying,\n      isLooping = _usePlayer.isLooping,\n      togglePlayer = _usePlayer.togglePlayer,\n      toggleLoop = _usePlayer.toggleLoop,\n      toggleShuffle = _usePlayer.toggleShuffle,\n      isShuffle = _usePlayer.isShuffle,\n      setIsPlayerState = _usePlayer.setIsPlayerState,\n      hasPrevious = _usePlayer.hasPrevious,\n      hasNext = _usePlayer.hasNext,\n      playNext = _usePlayer.playNext,\n      playPrevious = _usePlayer.playPrevious,\n      clearPlayerState = _usePlayer.clearPlayerState;\n\n  var episode = episodeList[currentEpisodeIndex];\n  var audioRef = useRef(null);\n\n  var _useState = useState(0),\n      progress = _useState[0],\n      setProgress = _useState[1];\n\n  useEffect(function () {\n    if (!audioRef.current) {\n      return;\n    }\n\n    if (isPlaying) {\n      audioRef.current.play();\n    } else {\n      audioRef.current.pause();\n    }\n  }, [isPlaying]);\n\n  function setupProgressListener() {\n    audioRef.current.currentTime = 0;\n    audioRef.current.addEventListener(\"timeupdate\", function () {\n      setProgress(audioRef.current.currentTime);\n    });\n  }\n\n  function handleSeek(amount) {\n    audioRef.current.currentTime = amount;\n    setProgress(amount);\n  }\n\n  function handleEpisodeEnded() {\n    if (hasNext) {\n      playNext();\n    } else {\n      clearPlayerState();\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.playerContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/playing.svg\",\n        alt: \"Tocando agora\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: [\"Tocando agora\", episode === null || episode === void 0 ? void 0 : episode.title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), episode ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.currentEpisode,\n      children: [/*#__PURE__*/_jsxDEV(Image, {\n        width: 592,\n        height: 592,\n        src: episode.thumbnail,\n        objectFit: \"cover\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: episode.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: episode.members\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.emptyPlayer,\n      children: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Selecione um podcast para ouvir\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: !episode ? styles.empty : \"\",\n      children: [episode && /*#__PURE__*/_jsxDEV(\"audio\", {\n        ref: audioRef,\n        src: episode.url,\n        loop: isLooping,\n        onEnded: handleEpisodeEnded,\n        onChange: handleSeek,\n        onPlay: function onPlay() {\n          return setIsPlayerState(true);\n        },\n        onPause: function onPause() {\n          return setIsPlayerState(false);\n        },\n        autoPlay: true,\n        onLoadedData: setupProgressListener\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.progress,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: convertDurationToTimeString(Math.floor(progress))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.slider,\n          children: episode ? /*#__PURE__*/_jsxDEV(Slider, {\n            max: episode.duration,\n            value: progress,\n            trackStyle: {\n              backgroundColor: \"#04d361\"\n            },\n            railStyle: {\n              backgroundColor: \"#9f75ff\"\n            },\n            handleStyle: {\n              borderColor: '\"#04d361\"',\n              borderWidth: 4\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.emptySlider\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: episode ? convertDurationToTimeString(episode.duration) : \"00:00:00\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.buttons,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: toggleShuffle,\n          disabled: !episode || episodeList.length <= 1,\n          className: isShuffle ? styles.isActive : \"\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/shuffle.svg\",\n            alt: \"Embaralhar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: playPrevious,\n          disabled: !episode || !hasPrevious,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/play-previous.svg\",\n            alt: \"Tocar anterior\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: styles.playButton,\n          disabled: !episode,\n          onClick: togglePlayer,\n          children: isPlaying ? /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/pause.svg\",\n            alt: \"Tocar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/play.svg\",\n            alt: \"Tocar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: playNext,\n          disabled: !episode || !hasNext,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/play-next.svg\",\n            alt: \"Tocar pr\\xF3xima\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: toggleLoop,\n          className: isLooping ? styles.isActive : \"\",\n          disabled: !episode,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/repeat.svg\",\n            alt: \"Repetir\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Player, \"gUuSjtCco6EdiensOH1EV/NCe9c=\", false, function () {\n  return [usePlayer];\n});\n\n_c = Player;\n\nvar _c;\n\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"sources":["/home/italo/Área de Trabalho/cursos/nlw#5/podcasternext/src/components/Player/index.tsx"],"names":["useEffect","useRef","useState","Image","Slider","styles","usePlayer","convertDurationToTimeString","Player","episodeList","currentEpisodeIndex","isPlaying","isLooping","togglePlayer","toggleLoop","toggleShuffle","isShuffle","setIsPlayerState","hasPrevious","hasNext","playNext","playPrevious","clearPlayerState","episode","audioRef","progress","setProgress","current","play","pause","setupProgressListener","currentTime","addEventListener","handleSeek","amount","handleEpisodeEnded","playerContainer","title","currentEpisode","thumbnail","members","emptyPlayer","empty","url","Math","floor","slider","duration","backgroundColor","borderColor","borderWidth","emptySlider","buttons","length","isActive","playButton"],"mappings":"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","sourcesContent":["import { useEffect, useRef, useState } from \"react\";\nimport Image from \"next/image\";\nimport Slider from \"rc-slider\";\n\nimport \"rc-slider/assets/index.css\";\n\nimport styles from \"./styles.module.scss\";\nimport { usePlayer } from \"../../contexts/PlayerContext\";\nimport { convertDurationToTimeString } from \"../../utils/ConvertDurationToTimeString\";\n\nexport function Player() {\n  const {\n    episodeList,\n    currentEpisodeIndex,\n    isPlaying,\n    isLooping,\n    togglePlayer,\n    toggleLoop,\n    toggleShuffle,\n    isShuffle,\n    setIsPlayerState,\n    hasPrevious,\n    hasNext,\n    playNext,\n    playPrevious,\n    clearPlayerState,\n  } = usePlayer();\n\n  const episode = episodeList[currentEpisodeIndex];\n  const audioRef = useRef<HTMLAudioElement>(null);\n  const [progress, setProgress] = useState(0);\n\n  useEffect(() => {\n    if (!audioRef.current) {\n      return;\n    }\n\n    if (isPlaying) {\n      audioRef.current.play();\n    } else {\n      audioRef.current.pause();\n    }\n  }, [isPlaying]);\n\n  function setupProgressListener() {\n    audioRef.current.currentTime = 0;\n\n    audioRef.current.addEventListener(\"timeupdate\", () => {\n      setProgress(audioRef.current.currentTime);\n    });\n  }\n\n  function handleSeek(amount: number) {\n    audioRef.current.currentTime = amount;\n    setProgress(amount);\n  }\n  function handleEpisodeEnded() {\n    if (hasNext) {\n      playNext();\n    } else {\n      clearPlayerState();\n    }\n  }\n\n  return (\n    <div className={styles.playerContainer}>\n      <header>\n        <img src=\"/playing.svg\" alt=\"Tocando agora\" />\n        <strong>Tocando agora{episode?.title}</strong>\n      </header>\n      {episode ? (\n        <div className={styles.currentEpisode}>\n          <Image\n            width={592}\n            height={592}\n            src={episode.thumbnail}\n            objectFit=\"cover\"\n          />\n          <strong>{episode.title}</strong>\n          <span>{episode.members}</span>\n        </div>\n      ) : (\n        <div className={styles.emptyPlayer}>\n          <strong>Selecione um podcast para ouvir</strong>\n        </div>\n      )}\n\n      <footer className={!episode ? styles.empty : \"\"}>\n        {episode && (\n          <audio\n            ref={audioRef}\n            src={episode.url}\n            loop={isLooping}\n            onEnded={handleEpisodeEnded}\n            onChange={handleSeek}\n            onPlay={() => setIsPlayerState(true)}\n            onPause={() => setIsPlayerState(false)}\n            autoPlay\n            onLoadedData={setupProgressListener}\n          />\n        )}\n\n        <div className={styles.progress}>\n          <span>{convertDurationToTimeString(Math.floor(progress))}</span>\n          <div className={styles.slider}>\n            {episode ? (\n              <Slider\n                max={episode.duration}\n                value={progress}\n                trackStyle={{ backgroundColor: \"#04d361\" }}\n                railStyle={{ backgroundColor: \"#9f75ff\" }}\n                handleStyle={{ borderColor: '\"#04d361\"', borderWidth: 4 }}\n              />\n            ) : (\n              <div className={styles.emptySlider} />\n            )}\n          </div>\n          <span>\n            {episode\n              ? convertDurationToTimeString(episode.duration)\n              : \"00:00:00\"}\n          </span>\n        </div>\n\n        <div className={styles.buttons}>\n          <button\n            type=\"button\"\n            onClick={toggleShuffle}\n            disabled={!episode || episodeList.length <= 1}\n            className={isShuffle ? styles.isActive : \"\"}\n          >\n            <img src=\"/shuffle.svg\" alt=\"Embaralhar\" />\n          </button>\n\n          <button\n            type=\"button\"\n            onClick={playPrevious}\n            disabled={!episode || !hasPrevious}\n          >\n            <img src=\"/play-previous.svg\" alt=\"Tocar anterior\" />\n          </button>\n          <button\n            type=\"button\"\n            className={styles.playButton}\n            disabled={!episode}\n            onClick={togglePlayer}\n          >\n            {isPlaying ? (\n              <img src=\"/pause.svg\" alt=\"Tocar\" />\n            ) : (\n              <img src=\"/play.svg\" alt=\"Tocar\" />\n            )}\n          </button>\n\n          <button\n            type=\"button\"\n            onClick={playNext}\n            disabled={!episode || !hasNext}\n          >\n            <img src=\"/play-next.svg\" alt=\"Tocar próxima\" />\n          </button>\n\n          <button\n            type=\"button\"\n            onClick={toggleLoop}\n            className={isLooping ? styles.isActive : \"\"}\n            disabled={!episode}\n          >\n            <img src=\"/repeat.svg\" alt=\"Repetir\" />\n          </button>\n        </div>\n      </footer>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}