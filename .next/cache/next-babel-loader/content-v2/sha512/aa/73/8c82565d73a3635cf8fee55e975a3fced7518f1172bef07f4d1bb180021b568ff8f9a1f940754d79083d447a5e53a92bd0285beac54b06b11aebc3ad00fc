{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/italo/\\xC1rea de Trabalho/cursos/nlw#5/podcasternext/src/pages/episodes/[slug].tsx\",\n    _s = $RefreshSig$();\n\nimport Image from \"next/image\";\nimport Link from \"next/link\";\nimport styles from \"./episode.module.scss\";\nimport { usePlayer } from \"../../contexts/PlayerContext\";\nexport var __N_SSG = true;\nexport default function Episode(_ref) {\n  _s();\n\n  var episode = _ref.episode;\n\n  var _usePlayer = usePlayer(),\n      playList = _usePlayer.playList,\n      episodeList = _usePlayer.episodeList,\n      currentEpisodeIndex = _usePlayer.currentEpisodeIndex;\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.episode,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.thumbnailContainer,\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        href: \"/\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/arrow-left.svg\",\n            alt: \"Voltar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Image, {\n        width: 700,\n        height: 160,\n        src: episode.thumbnail,\n        objectFit: \"cover\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: function onClick() {\n          return play(episode);\n        },\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/play.svg\",\n          alt: \"Tocar episodio \".concat(episode.title)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: episode.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: episode.members\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: episode.publishedAt\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: episode.durationAsString\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.description,\n      dangerouslySetInnerHTML: {\n        __html: episode.description\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Episode, \"+K0gc0bVfanCEZpfSKI8j0vwkdM=\", false, function () {\n  return [usePlayer];\n});\n\n_c = Episode;\n\nvar _c;\n\n$RefreshReg$(_c, \"Episode\");","map":{"version":3,"sources":["/home/italo/√Årea de Trabalho/cursos/nlw#5/podcasternext/src/pages/episodes/[slug].tsx"],"names":["Image","Link","styles","usePlayer","Episode","episode","playList","episodeList","currentEpisodeIndex","thumbnailContainer","thumbnail","play","title","members","publishedAt","durationAsString","description","__html"],"mappings":";;;;;AAMA,OAAOA,KAAP,MAAkB,YAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAEA,OAAOC,MAAP,MAAmB,uBAAnB;AACA,SAASC,SAAT,QAA0B,8BAA1B;;AAiBA,eAAe,SAASC,OAAT,OAA4C;AAAA;;AAAA,MAAzBC,OAAyB,QAAzBA,OAAyB;;AAAA,mBACFF,SAAS,EADP;AAAA,MACjDG,QADiD,cACjDA,QADiD;AAAA,MACvCC,WADuC,cACvCA,WADuC;AAAA,MAC1BC,mBAD0B,cAC1BA,mBAD0B;;AAEzD,sBACE;AAAK,IAAA,SAAS,EAAEN,MAAM,CAACG,OAAvB;AAAA,4BACE;AAAK,MAAA,SAAS,EAAEH,MAAM,CAACO,kBAAvB;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,IAAI,EAAC,GAAX;AAAA,+BACE;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAA,iCACE;AAAK,YAAA,GAAG,EAAC,iBAAT;AAA2B,YAAA,GAAG,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAOE,QAAC,KAAD;AACE,QAAA,KAAK,EAAE,GADT;AAEE,QAAA,MAAM,EAAE,GAFV;AAGE,QAAA,GAAG,EAAEJ,OAAO,CAACK,SAHf;AAIE,QAAA,SAAS,EAAC;AAJZ;AAAA;AAAA;AAAA;AAAA,cAPF,eAcE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAE;AAAA,iBAAMC,IAAI,CAACN,OAAD,CAAV;AAAA,SAA/B;AAAA,+BACE;AAAK,UAAA,GAAG,EAAC,WAAT;AAAqB,UAAA,GAAG,2BAAoBA,OAAO,CAACO,KAA5B;AAAxB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAdF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAoBE;AAAA,8BACE;AAAA,kBAAKP,OAAO,CAACO;AAAb;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBAAOP,OAAO,CAACQ;AAAf;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA,kBAAOR,OAAO,CAACS;AAAf;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAA,kBAAOT,OAAO,CAACU;AAAf;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YApBF,eA2BE;AACE,MAAA,SAAS,EAAEb,MAAM,CAACc,WADpB;AAEE,MAAA,uBAAuB,EAAE;AAAEC,QAAAA,MAAM,EAAEZ,OAAO,CAACW;AAAlB;AAF3B;AAAA;AAAA;AAAA;AAAA,YA3BF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkCD;;GApCuBZ,O;UACiCD,S;;;KADjCC,O","sourcesContent":["import { GetStaticPaths, GetStaticProps } from \"next\";\nimport { useRouter } from \"next/router\";\nimport { api } from \"../../services\";\nimport { format, parseISO } from \"date-fns\";\nimport ptBR from \"date-fns/locale/pt-BR\";\nimport { convertDurationToTimeString } from \"../../utils/ConvertDurationToTimeString\";\nimport Image from \"next/image\";\nimport Link from \"next/link\";\n\nimport styles from \"./episode.module.scss\";\nimport { usePlayer } from \"../../contexts/PlayerContext\";\ninterface Episode {\n  id: string;\n  title: string;\n  members: string;\n  thumbnail: string;\n  duration: number;\n  description: string;\n  durationAsString: string;\n  url: string;\n  publishedAt: string;\n}\n\ninterface EpisodeProps {\n  episode: Episode;\n}\n\nexport default function Episode({ episode }: EpisodeProps) {\n  const { playList, episodeList, currentEpisodeIndex } = usePlayer();\n  return (\n    <div className={styles.episode}>\n      <div className={styles.thumbnailContainer}>\n        <Link href=\"/\">\n          <button type=\"button\">\n            <img src=\"/arrow-left.svg\" alt=\"Voltar\" />\n          </button>\n        </Link>\n\n        <Image\n          width={700}\n          height={160}\n          src={episode.thumbnail}\n          objectFit=\"cover\"\n        />\n\n        <button type=\"button\" onClick={() => play(episode)}>\n          <img src=\"/play.svg\" alt={`Tocar episodio ${episode.title}`} />\n        </button>\n      </div>\n\n      <header>\n        <h1>{episode.title}</h1>\n        <span>{episode.members}</span>\n        <span>{episode.publishedAt}</span>\n        <span>{episode.durationAsString}</span>\n      </header>\n\n      <div\n        className={styles.description}\n        dangerouslySetInnerHTML={{ __html: episode.description }}\n      />\n    </div>\n  );\n}\n\nexport const getStaticPaths: GetStaticPaths = async () => {\n  const { data } = await api.get(\"episodes\", {\n    params: {\n      _limit: 2,\n      _sort: \"published_at\",\n      _order: \"desc\",\n    },\n  });\n\n  const paths = data.map((episode) => {\n    return {\n      params: {\n        slug: episode.id,\n      },\n    };\n  });\n\n  return {\n    paths,\n    fallback: \"blocking\",\n  };\n};\n\nexport const getStaticProps: GetStaticProps = async (ctx) => {\n  const { slug } = ctx.params;\n  const { data } = await api.get(`/episodes/${slug}`);\n\n  const episode = {\n    id: data.id,\n    title: data.title,\n    thumbnail: data.thumbnail,\n    members: data.members,\n    publishedAt: format(parseISO(data.published_at), \"d MMM yy\", {\n      locale: ptBR,\n    }),\n    duration: Number(data.file.duration),\n    durationAsString: convertDurationToTimeString(Number(data.file.duration)),\n    description: data.description,\n    url: data.file.url,\n  };\n\n  return {\n    props: { episode },\n    revalidate: 60 * 60 * 24, // 24 hours\n  };\n};\n"]},"metadata":{},"sourceType":"module"}