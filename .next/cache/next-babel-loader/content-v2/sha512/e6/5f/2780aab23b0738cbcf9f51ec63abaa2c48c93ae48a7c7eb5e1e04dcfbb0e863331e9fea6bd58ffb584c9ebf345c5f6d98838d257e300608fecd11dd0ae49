{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/italo/\\xC1rea de Trabalho/cursos/nlw#5/podcasternext/src/pages/episodes/[slug].tsx\";\nimport { api } from \"../../services\";\nimport { format, parseISO } from \"date-fns\";\nimport ptBR from \"date-fns/locale/pt-BR\";\nimport { convertDurationToTimeString } from \"../../utils/ConvertDurationToTimeString\";\nimport Image from \"next/image\";\nimport Link from \"next/link\";\nimport styles from \"./episode.module.scss\";\nimport { usePlayer } from \"../../contexts/PlayerContext\";\nexport default function Episode({\n  episode\n}) {\n  const {\n    playList,\n    episodeList,\n    currentEpisodeIndex\n  } = usePlayer();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.episode,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.thumbnailContainer,\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        href: \"/\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/arrow-left.svg\",\n            alt: \"Voltar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Image, {\n        width: 700,\n        height: 160,\n        src: episode.thumbnail,\n        objectFit: \"cover\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => play(episode),\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/play.svg\",\n          alt: `Tocar episodio ${episode.title}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: episode.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: episode.members\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: episode.publishedAt\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: episode.durationAsString\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.description,\n      dangerouslySetInnerHTML: {\n        __html: episode.description\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\nexport const getStaticPaths = async () => {\n  const {\n    data\n  } = await api.get(\"episodes\", {\n    params: {\n      _limit: 2,\n      _sort: \"published_at\",\n      _order: \"desc\"\n    }\n  });\n  const paths = data.map(episode => {\n    return {\n      params: {\n        slug: episode.id\n      }\n    };\n  });\n  return {\n    paths,\n    fallback: \"blocking\"\n  };\n};\nexport const getStaticProps = async ctx => {\n  const {\n    slug\n  } = ctx.params;\n  const {\n    data\n  } = await api.get(`/episodes/${slug}`);\n  const episode = {\n    id: data.id,\n    title: data.title,\n    thumbnail: data.thumbnail,\n    members: data.members,\n    publishedAt: format(parseISO(data.published_at), \"d MMM yy\", {\n      locale: ptBR\n    }),\n    duration: Number(data.file.duration),\n    durationAsString: convertDurationToTimeString(Number(data.file.duration)),\n    description: data.description,\n    url: data.file.url\n  };\n  return {\n    props: {\n      episode\n    },\n    revalidate: 60 * 60 * 24 // 24 hours\n\n  };\n};","map":{"version":3,"sources":["/home/italo/√Årea de Trabalho/cursos/nlw#5/podcasternext/src/pages/episodes/[slug].tsx"],"names":["api","format","parseISO","ptBR","convertDurationToTimeString","Image","Link","styles","usePlayer","Episode","episode","playList","episodeList","currentEpisodeIndex","thumbnailContainer","thumbnail","play","title","members","publishedAt","durationAsString","description","__html","getStaticPaths","data","get","params","_limit","_sort","_order","paths","map","slug","id","fallback","getStaticProps","ctx","published_at","locale","duration","Number","file","url","props","revalidate"],"mappings":"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","sourcesContent":["import { GetStaticPaths, GetStaticProps } from \"next\";\nimport { useRouter } from \"next/router\";\nimport { api } from \"../../services\";\nimport { format, parseISO } from \"date-fns\";\nimport ptBR from \"date-fns/locale/pt-BR\";\nimport { convertDurationToTimeString } from \"../../utils/ConvertDurationToTimeString\";\nimport Image from \"next/image\";\nimport Link from \"next/link\";\n\nimport styles from \"./episode.module.scss\";\nimport { usePlayer } from \"../../contexts/PlayerContext\";\ninterface Episode {\n  id: string;\n  title: string;\n  members: string;\n  thumbnail: string;\n  duration: number;\n  description: string;\n  durationAsString: string;\n  url: string;\n  publishedAt: string;\n}\n\ninterface EpisodeProps {\n  episode: Episode;\n}\n\nexport default function Episode({ episode }: EpisodeProps) {\n  const { playList, episodeList, currentEpisodeIndex } = usePlayer();\n  return (\n    <div className={styles.episode}>\n      <div className={styles.thumbnailContainer}>\n        <Link href=\"/\">\n          <button type=\"button\">\n            <img src=\"/arrow-left.svg\" alt=\"Voltar\" />\n          </button>\n        </Link>\n\n        <Image\n          width={700}\n          height={160}\n          src={episode.thumbnail}\n          objectFit=\"cover\"\n        />\n\n        <button type=\"button\" onClick={() => play(episode)}>\n          <img src=\"/play.svg\" alt={`Tocar episodio ${episode.title}`} />\n        </button>\n      </div>\n\n      <header>\n        <h1>{episode.title}</h1>\n        <span>{episode.members}</span>\n        <span>{episode.publishedAt}</span>\n        <span>{episode.durationAsString}</span>\n      </header>\n\n      <div\n        className={styles.description}\n        dangerouslySetInnerHTML={{ __html: episode.description }}\n      />\n    </div>\n  );\n}\n\nexport const getStaticPaths: GetStaticPaths = async () => {\n  const { data } = await api.get(\"episodes\", {\n    params: {\n      _limit: 2,\n      _sort: \"published_at\",\n      _order: \"desc\",\n    },\n  });\n\n  const paths = data.map((episode) => {\n    return {\n      params: {\n        slug: episode.id,\n      },\n    };\n  });\n\n  return {\n    paths,\n    fallback: \"blocking\",\n  };\n};\n\nexport const getStaticProps: GetStaticProps = async (ctx) => {\n  const { slug } = ctx.params;\n  const { data } = await api.get(`/episodes/${slug}`);\n\n  const episode = {\n    id: data.id,\n    title: data.title,\n    thumbnail: data.thumbnail,\n    members: data.members,\n    publishedAt: format(parseISO(data.published_at), \"d MMM yy\", {\n      locale: ptBR,\n    }),\n    duration: Number(data.file.duration),\n    durationAsString: convertDurationToTimeString(Number(data.file.duration)),\n    description: data.description,\n    url: data.file.url,\n  };\n\n  return {\n    props: { episode },\n    revalidate: 60 * 60 * 24, // 24 hours\n  };\n};\n"]},"metadata":{},"sourceType":"module"}