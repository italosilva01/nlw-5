{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/italo/\\xC1rea de Trabalho/cursos/nlw#5/podcasternext/src/pages/episodes/[slug].tsx\";\nimport { useRouter } from \"next/router\";\nimport { api } from \"../../services\";\nimport { format, parseISO } from \"date-fns\";\nimport ptBR from \"date-fns/locale/pt-BR\";\nimport { convertDurationToTimeString } from \"../../utils/ConvertDurationToTimeString\";\nexport default function Episode({\n  episode\n}) {\n  const router = useRouter();\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: episode.title\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 10\n  }, this);\n}\nexport const getStaticProps = async ctx => {\n  const {\n    slug\n  } = ctx.params;\n  const {\n    data\n  } = await api.get(`/episodes/${slug}`);\n  const episode = {\n    id: data.id,\n    title: data.title,\n    thumbnail: data.thumbnail,\n    members: data.members,\n    publishedAt: format(parseISO(data.published_at), \"d MMM yy\", {\n      locale: ptBR\n    }),\n    duration: Number(data.file.duration),\n    durationAsString: convertDurationToTimeString(Number(data.file.duration)),\n    description: data.description,\n    url: data.file.url\n  };\n  return {\n    props: {},\n    revalidate: 60 * 60 * 24 // 24 hours\n\n  };\n};","map":{"version":3,"sources":["/home/italo/√Årea de Trabalho/cursos/nlw#5/podcasternext/src/pages/episodes/[slug].tsx"],"names":["useRouter","api","format","parseISO","ptBR","convertDurationToTimeString","Episode","episode","router","title","getStaticProps","ctx","slug","params","data","get","id","thumbnail","members","publishedAt","published_at","locale","duration","Number","file","durationAsString","description","url","props","revalidate"],"mappings":";;AACA,SAASA,SAAT,QAA0B,aAA1B;AACA,SAASC,GAAT,QAAoB,gBAApB;AACA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,UAAjC;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,SAASC,2BAAT,QAA4C,yCAA5C;AAkBA,eAAe,SAASC,OAAT,CAAiB;AAAEC,EAAAA;AAAF,CAAjB,EAA6C;AAC1D,QAAMC,MAAM,GAAGR,SAAS,EAAxB;AAEA,sBAAO;AAAA,cAAKO,OAAO,CAACE;AAAb;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;AAED,OAAO,MAAMC,cAA8B,GAAG,MAAOC,GAAP,IAAe;AAC3D,QAAM;AAAEC,IAAAA;AAAF,MAAWD,GAAG,CAACE,MAArB;AAEA,QAAM;AAAEC,IAAAA;AAAF,MAAW,MAAMb,GAAG,CAACc,GAAJ,CAAS,aAAYH,IAAK,EAA1B,CAAvB;AAEA,QAAML,OAAO,GAAG;AACdS,IAAAA,EAAE,EAAEF,IAAI,CAACE,EADK;AAEdP,IAAAA,KAAK,EAAEK,IAAI,CAACL,KAFE;AAGdQ,IAAAA,SAAS,EAAEH,IAAI,CAACG,SAHF;AAIdC,IAAAA,OAAO,EAAEJ,IAAI,CAACI,OAJA;AAKdC,IAAAA,WAAW,EAAEjB,MAAM,CAACC,QAAQ,CAACW,IAAI,CAACM,YAAN,CAAT,EAA8B,UAA9B,EAA0C;AAC3DC,MAAAA,MAAM,EAAEjB;AADmD,KAA1C,CALL;AAQdkB,IAAAA,QAAQ,EAAEC,MAAM,CAACT,IAAI,CAACU,IAAL,CAAUF,QAAX,CARF;AASdG,IAAAA,gBAAgB,EAAEpB,2BAA2B,CAACkB,MAAM,CAACT,IAAI,CAACU,IAAL,CAAUF,QAAX,CAAP,CAT/B;AAUdI,IAAAA,WAAW,EAAEZ,IAAI,CAACY,WAVJ;AAWdC,IAAAA,GAAG,EAAEb,IAAI,CAACU,IAAL,CAAUG;AAXD,GAAhB;AAcA,SAAO;AACLC,IAAAA,KAAK,EAAE,EADF;AAELC,IAAAA,UAAU,EAAE,KAAK,EAAL,GAAU,EAFjB,CAEqB;;AAFrB,GAAP;AAID,CAvBM","sourcesContent":["import { GetStaticProps } from \"next\";\nimport { useRouter } from \"next/router\";\nimport { api } from \"../../services\";\nimport { format, parseISO } from \"date-fns\";\nimport ptBR from \"date-fns/locale/pt-BR\";\nimport { convertDurationToTimeString } from \"../../utils/ConvertDurationToTimeString\";\n\ninterface Episode {\n  id: string;\n  title: string;\n  members: string;\n  thumbnail: string;\n  duration: number;\n  description: string;\n  durationAsString: string;\n  url: string;\n  publishedAt: string;\n}\n\ninterface EpisodesProps {\n  episode: Episode;\n}\n\nexport default function Episode({ episode }: EpisodesProps) {\n  const router = useRouter();\n\n  return <h1>{episode.title}</h1>;\n}\n\nexport const getStaticProps: GetStaticProps = async (ctx) => {\n  const { slug } = ctx.params;\n\n  const { data } = await api.get(`/episodes/${slug}`);\n\n  const episode = {\n    id: data.id,\n    title: data.title,\n    thumbnail: data.thumbnail,\n    members: data.members,\n    publishedAt: format(parseISO(data.published_at), \"d MMM yy\", {\n      locale: ptBR,\n    }),\n    duration: Number(data.file.duration),\n    durationAsString: convertDurationToTimeString(Number(data.file.duration)),\n    description: data.description,\n    url: data.file.url,\n  };\n\n  return {\n    props: {},\n    revalidate: 60 * 60 * 24, // 24 hours\n  };\n};\n"]},"metadata":{},"sourceType":"module"}